# Sample Logstash configuration for creating a simple
# Oracle -> Logstash -> Elasticsearch pipeline.

input
{
	#inserts
	jdbc {
	
	#Path to download jdbc deriver and add in class path
	jdbc_driver_library => "D:/Program Files/sqljdbc_6.2/enu/mssql-jdbc-6.2.2.jre8.jar"
	
	# MS SQL Driver Class
	jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
	
	# MS SQL server database jdbc connection string ,  jdbc:oracle:thin:@hostname:PORT/SERVICE
	jdbc_connection_string => "jdbc:sqlserver://localhost;database=mssql_server;integratedSecurity=true;"
	
	#The user and password to connect to database
    jdbc_user => nil
	#jdbc_user => "Purnima"
	#jdbc_password => "Jan#1984"
	

	#Configure Cron to How frequent want execute query in database
	schedule => "* * * * *"

	#Use for Inline query and if want to execute record after last run compare with value sql_last_value that can be numeric or timestamp
	statement => "select * from [user] where [id] >:sql_last_value order by [user_name] asc"
	
	#Below is configuration when want to use last run value
	
	use_column_value => true
	tracking_column => id	
	tracking_column_type => "numeric"
	record_last_run => true
	#This file keep record of sql_last_value so that when next time query run can utilize last run values
	last_run_metadata_path =>"D:\logstash-7.8.1\lastrun\.logstash_jdbc_test_last_run.txt"
	 
	}
	
	#Updates
	jdbc {
	
	#Path to download jdbc deriver and add in class path
	jdbc_driver_library => "D:/Program Files/sqljdbc_6.2/enu/mssql-jdbc-6.2.2.jre8.jar"
	
	# MS SQL Driver Class
	jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
	
	# MS SQL database jdbc connection string ,  jdbc:oracle:thin:@hostname:PORT/SERVICE
	jdbc_connection_string => "jdbc:sqlserver://localhost;database=mssql_server;integratedSecurity=true;"
	
	#The user and password to connect to database
    jdbc_user => nil
	#jdbc_user => "admin"
	#jdbc_password => "welcome123"
	

	#Configure Cron to How frequent want execute query in database
	schedule => "* * * * *"

	#Use for Inline query and if want to execute record after last run compare with value sql_last_value that can be numeric or timestamp
	statement => "select * from [user] where [modified_ts] >:sql_last_value order by [user_name] asc"
	
	#Below is configuration when want to use last run value
	
	use_column_value => true
	tracking_column => modified_ts	
	tracking_column_type => "timestamp"
	record_last_run => true
	#This file keep record of sql_last_value so that when next time query run can utilize last run values
	last_run_metadata_path =>"D:\logstash-7.8.1\updates_lastrun\.logstash_jdbc_test_last_run.txt"

 
	 
	}
}
output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "userindex"
	doc_as_upsert =>true
	document_id=> "%{id}"
    #user => "elastic"
    #password => "changeme"
  }
} 